# File: makefiles/makefile_multiply

CIRCUIT_NAME=multiply
CIRCUIT_DIR=circom/
INPUTS_DIR=inputs/
BUILD_DIR=build/

# Random keyphrase for automatic contribution
ENTROPY="random-keyphrase"

all: compile witness setup proof verify

compile:
	mkdir -p $(BUILD_DIR)
	circom "$(CIRCUIT_DIR)$(CIRCUIT_NAME).circom" --r1cs --wasm --sym -o $(BUILD_DIR)

witness:
	node $(BUILD_DIR)$(CIRCUIT_NAME)_js/generate_witness.js \
		$(BUILD_DIR)$(CIRCUIT_NAME)_js/$(CIRCUIT_NAME).wasm \
		$(INPUTS_DIR)$(CIRCUIT_NAME).json \
		$(BUILD_DIR)/witness.wtns

setup:
	snarkjs powersoftau new bn128 12 $(BUILD_DIR)/pot12_0000.ptau -v
	snarkjs powersoftau contribute $(BUILD_DIR)/pot12_0000.ptau \
		$(BUILD_DIR)/pot12_0001.ptau --name="First contribution" --entropy=$(ENTROPY) -v
	snarkjs powersoftau prepare phase2 $(BUILD_DIR)/pot12_0001.ptau \
		$(BUILD_DIR)/pot12_final.ptau -v
	snarkjs groth16 setup $(BUILD_DIR)/$(CIRCUIT_NAME).r1cs \
		$(BUILD_DIR)/pot12_final.ptau \
		$(BUILD_DIR)/$(CIRCUIT_NAME)_0000.zkey
	snarkjs zkey contribute $(BUILD_DIR)/$(CIRCUIT_NAME)_0000.zkey \
		$(BUILD_DIR)/$(CIRCUIT_NAME)_final.zkey --name="Key contribution" --entropy=$(ENTROPY) -v
	snarkjs zkey export verificationkey $(BUILD_DIR)/$(CIRCUIT_NAME)_final.zkey \
		$(BUILD_DIR)/verification_key.json

proof:
	snarkjs groth16 prove $(BUILD_DIR)/$(CIRCUIT_NAME)_final.zkey \
		$(BUILD_DIR)/witness.wtns \
		$(BUILD_DIR)/proof.json \
		$(BUILD_DIR)/public.json

verify:
	snarkjs groth16 verify $(BUILD_DIR)/verification_key.json \
		$(BUILD_DIR)/public.json \
		$(BUILD_DIR)/proof.json

clean:
	rm -rf $(BUILD_DIR)
	rm -rf $(BUILD_DIR)$(CIRCUIT_NAME)_js
